class Solution {
public:
    bool wordPattern(string pattern, string s) {
        vector<string>v;
        int i=0;
        string temp="";
        while(i<s.size())
        {
            if(s[i]==' ')
            {
                v.push_back(temp);
                temp="";
            }
            else
            {
                temp+=s[i];
            }
            i++;
        }
        v.push_back(temp);
        if(v.size()!=pattern.size())
            return false;
        unordered_map<char,string>map;
        set<string>set;
        for(int i=0;i<pattern.size();i++)
        {
            if(map.find(pattern[i])!=map.end())
            {
                if(map[pattern[i]]!=v[i])
                    return false;
            }
            else
            {
                if(set.count(v[i])>0)
                    return false;
                map[pattern[i]]=v[i];
                set.insert(v[i]);
            }
        }
        return true;
    }
};
